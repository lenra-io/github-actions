name: Flutter Build
description: 'Build a Flutter app'
author: Lenra-io
branding:
  color: blue
  icon: package

inputs:
  targets:
    description: 'JSON representation of the targets to build and their respective artifacts to upload'
    required: true
  platforms:
    description: 'The platforms to use to build for each target'
    required: true
  flutter-extra-args:
    description: 'Extra arguments to pass to the flutter build command'
    required: false
    default: ''
  flutter-channel:
    description: 'The release channel of Flutter to use for building'
    required: false
    default: 'stable'
  flutter-version:
    description: 'The version of Flutter to use for building'
    required: false
    default: 'any'

outputs:
  artifacts-path:
    description: 'The artifacts paths'
    value: ${{ toJson(steps.find-artifacts.outputs.artifacts) }}

runs:
  using: "composite"
  steps:
  - id: check-flutter-path
    name: Check flutter installation
    continue-on-error: true
    uses: actions/github-script@v6
    with:
      result-encoding: string
      script: |
        const flutterPath: string = await io.which('flutter', true)
        return flutterPath
  
  - name: Setup Flutter Environment
    if: steps.check-flutter-path.outputs.result == ''
    uses: subosito/flutter-action@v2.10.0
    with:
      channel: ${{ inputs.flutter-version }}
      flutter-version: ${{ inputs.flutter-version }}
      cache: true
      cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
      cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path

  - name: check-yq-path
    continue-on-error: true
    uses: actions/github-script@v6
    with:
      result-encoding: string
      script: |
        const yqPath: string = await io.which('yq', true)
        return yqPath

  - name: Install yq
    id: setup-yq
    if: steps.check-yq-path.outputs.result == ''
    uses: shiipou/setup-yq-action@v2.2.0
    with:
      version: v4.34.1

  - name: Install Dependencies (windows)
    shell: pwsh
    if: ${{ runner.os == 'Windows' }}
    run: |
      flutter config --enable-windows-desktop

  - name: Install Dependencies (linux)
    shell: sh
    if: ${{ runner.os == 'Linux' }}
    run: |
      sudo apt-get update -y
      sudo apt-get install -y make cmake ninja-build libgtk-3-dev locate libfuse2
      flutter config --enable-linux-desktop
      wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
      chmod +x appimagetool
      mv appimagetool /usr/local/bin/

  - name: Install Dependencies (macos)
    shell: sh
    if: ${{ runner.os == 'macOS' }}
    run: |
      flutter config --enable-macos-desktop

  - name: Build
    shell: sh
    run: |
      flutter pub global activate flutter_distributor
      flutter_distributor package ${{ inputs.flutter-extra-args }} --platform ${{ inputs.platforms }} --targets ${{ inputs.targets }}
