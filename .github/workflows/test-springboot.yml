name: Test Spring Boot App
# description: Run tests and generate coverage report for a Spring Boot application in an artifact.

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        description: 'Current Working directory (Useful for mono-repo)'
        required: false
        default: '.'
      java-version:
        type: string
        description: 'Version of Java to use'
        required: false
        default: '21'
      java-distribution:
        type: string
        description: 'Distribution of java to use'
        required: false
        default: 'temurin'
      artifact-name:
        type: string
        description: 'Give generated artifact a name'
        required: false
      artifact-path:
        type: string
        description: 'Path to the generated artifact to upload'
        required: false
        default: 'build/reports/tests/test/'
    outputs:
      artifact-id:
        description: 'The ID of the uploaded artifact'
        value: ${{ jobs.test.outputs.artifact-id }}
      artifact-url:
        description: 'The URL of the uploaded artifact'
        value: ${{ jobs.test.outputs.artifact-url }}
  
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
      artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: app
          POSTGRES_USER: app
          POSTGRES_PASSWORD: app
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: gradle

      - name: Build with Gradle
        env:
          DATABASE_URL: postgresql://localhost:5432/app
          DATABASE_USER: app
          DATABASE_PASSWORD: app
        run: gradle test

      - name: Upload build artifacts
        if: inputs.artifact-name != '' && inputs.artifact-path != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.working-directory }}/${{ inputs.artifact-path }}
