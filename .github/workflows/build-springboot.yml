name: Build Spring Boot App
# description: Build a Spring Boot application and generate a JAR artifact.

on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        description: 'Current Working directory (Useful for mono-repo)'
        required: false
        default: '.'
      java-version:
        type: string
        description: 'Version of Java to use'
        required: false
        default: '21'
      java-distribution:
        type: string
        description: 'Distribution of java to use'
        required: false
        default: 'temurin'
      artifact-name:
        type: string
        description: 'Give generated artifact a name'
        required: false
      artifact-path:
        type: string
        description: 'Path to the generated artifact to upload'
        required: false
        default: 'build/libs/*.jar'
      envs:
        type: string
        description: 'Add extra env variable to the build, one value per line : <name>=<value>'
        required: false
    secrets:
      envs:
        description: 'Add extra env variable to the build, one value per line : <name>=<value>'
        required: false
    outputs:
      artifact-id:
        description: 'The ID of the uploaded artifact'
        value: ${{ jobs.build.outputs.artifact-id }}
      artifact-url:
        description: 'The URL of the uploaded artifact'
        value: ${{ jobs.build.outputs.artifact-url }}
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
      artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
    steps:
      - uses: actions/checkout@v4
      
      - run: echo "${{ inputs.envs }}" >> .env
      - run: echo "${{ secrets.envs }}" >> .env
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: gradle

      - name: Build with Gradle
        run: gradle build -x test

      - name: Upload build artifacts
        if: inputs.artifact-name != '' && inputs.artifact-path != ''
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ inputs.working-directory }}/${{ inputs.artifact-path }}
