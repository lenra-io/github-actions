name: Get Version
description: Determine the version of the project based on the latest commit and generate a changelog using the Rust Convco cli tool.

on:
  workflow_call:
    inputs:
      path:
        type: string
        description: 'Only commits that update those <paths> will be taken into account.'
        required: false
      release-branch:
        type: string
        description: 'Name of the release branch'
        required: false
        default: main
      prerelease-branches:
        type: string
        description: 'Prerelease branch names'
        required: false
        default: beta,alpha,rc
      changelog-include-hidden-section:
        type: boolean
        description: 'Include hidden sections in the changelog'
        required: false
        default: false
    outputs:
      version:
        description: 'The calculated version'
        value: ${{ jobs.get_version.outputs.version }}

jobs:
  get_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Determine version using convco CLI
        id: get_version
        run: |
          echo "Using release branch: ${{ inputs.release-branch }}"
          echo "Using prerelease branches: ${{ inputs.prerelease-branches }}"
          if [[ -n "${{ inputs.path }}" ]]; then
            echo "Using path: ${{ inputs.path }}"
            path_args="--path ${{ inputs.path }}"
          fi
          IFS="," read -ra prerelease_branches <<< "${{ inputs.prerelease-branches }}"
          current_branch=${{ github.ref_name }}
          if [[ "$IFS${prerelease_branches[*]}$IFS" =~ "$IFS${current_branch}$IFS" ]] ; then
            prerelease_args="--prerelease"
            channel=${current_branch}
          fi
          if ${{ inputs.include-hidden-section }} ; then
            hidden_args="--include-hidden-section"
          fi
          VERSION=$(convco version -b $prerelease_args)
          CHANGELOG=$(convco changelog $hidden_args -u $VERSION)
          echo "Determined version: ${VERSION}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          if [[ -n "${channel}" ]]; then
            echo "channel=${channel}" >> $GITHUB_OUTPUT
          fi
          echo "changelog=${CHANGELOG}" >> $GITHUB_OUTPUT
