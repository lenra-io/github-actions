name: Release Flutter

on:
  workflow_call:
    inputs:
      package-name:
        type: string
        description: 'Name of the package to deploy'
        required: true
      version:
        type: string
        description: 'Version of the package to deploy'
        required: true
      build:
        type: string
        description: 'Build number of the package to deploy'
        required: false
      release-branches:
        type: string
        description: The branches on which releases should happen, comma separated name of branches
        required: false
        default: 'main'
      prerelease-branches:
        type: string
        description: The branches on which prereleases should happen, comma separated name of branches
        required: false
        default: 'rc,beta,alpha'
      send-pr-release-notification:
        type: string
        description: To send or not the "Released" comment when the PR is include in a (pre)released tag
        required: false
        default: 'false'
    secrets:
      uploadKeyStore:
        description: The keystore file to sign the app
        required: false
      uploadKeyName:
        description: The name of the key to sign the app
        required: false
      uploadKeyPassword:
        description: The password of the key to sign the app
        required: false
      serviceAccountJsonPlainText:
        description: The token that'll authentificate the user to the Google Playstore API to create new release
        required: true
    outputs:
      assets:
        description: The list of assets to upload to the release
        value: ${{ jobs.release.outputs.assets }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      assets: ${{ steps.list-assets.outputs.result }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - id: list-assets
        name: List assets
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const globber = await glob.create('artifacts/*/*')
            const files = await globber.glob()
            return files.join('\n')

      - name: Create service_account.json
        id: createServiceAccount
        run: echo '${{ secrets.serviceAccountJsonPlainText }}' > service_account.json

      - name: Get android asset
        id: get-android-asset
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const files = "${{ steps.list-assets.outputs.result }}".split('\n')
            const androidAABFiles = files.filter(file => file.includes('aab'))
            if (androidAABFiles.length > 0) {
              return androidAABFiles[0]
            }
            const androidAPKFiles = files.filter(file => file.includes('apk'))
            if (androidAPKFiles.length > 0) {
              return androidAPKFiles[0]
            }
            return ''

      - id: get-track-to-release
        name: Get track to release
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const releaseTrack = 'production'
            const releaseChannels = "${{ inputs.release-branches }}".split(',')
            const currentChannel = "${{ github.ref_name }}"
            if (releaseChannels.includes(currentChannel)) {
              return releaseTrack
            }

            const prereleaseTracks = ['beta', 'alpha', 'internal']
            const prereleaseChannels = "${{ inputs.prerelease-branches }}".split(',')

            if (prereleaseChannels.includes(currentChannel)) {
              const index = prereleaseChannels.indexOf(currentChannel)
              if (index >= prereleaseTracks.length) {
                return prereleaseTracks.pop()
              }
              return prereleaseTracks[index]
            }
            return prereleaseTracks.pop()

      - id: get-changelogs
        name: Get ChangeLogs
        uses: lenra-io/github-actions/jobs/get-changelogs@main
        with:
          version: ${{ inputs.version }}

      - name: Publish to playstore
        uses: lenra-io/github-actions/jobs/publish-to-playstore@main
        with:
          service-account: service_account.json
          version: ${{ inputs.version }}
          package-name: ${{ inputs.package-name }}
          assets: ${{ steps.get-android-asset.outputs.result }}
          track: ${{ steps.get-track-to-release.outputs.result }}
          changelogs: ${{ steps.get-changelogs.outputs.changelogs }}
